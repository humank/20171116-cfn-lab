AWSTemplateFormatVersion: '2010-09-09'

Description:
  create ec2 t2.micro instance for bastion host
Parameters:
  StackName:
        Description: An environment name that will be prefixed to resource names
        Type: String
  
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  Subnets:
    Description: WebServer EC2 instance locate in public subnet
    Type: List<AWS::EC2::Subnet::Id>

  BastionHostSecurityGroup:
    Description: WebServer EC2 assigned with VPC Security Group
    Type: List<AWS::EC2::SecurityGroup::Id>

  BastionSSHLocation:
    Description: Lockdown SSH access to the bastion host (default can be accessed from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form on-premise ip x.x.x.x/x.

  BastionInstanceType:
      Description: WebServer EC2 instance type
      Type: String
      Default: t2.micro

  BastionImageId:
    Description: Use Amazon Linux AMI 2017.09.1 HVM - ami-2803ac4e
    Type: String
    Default: ami-2803ac4e

      
Resources:
  BastionHostEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: !Ref BastionInstanceType
      ImageId: !Ref BastionImageId
      AvailabilityZone: !Select [ 0, !GetAZs ]
      SubnetId: !Select [ 0, !Ref Subnets ]
      SecurityGroupIds: [!Ref BastionHostSecurityGroup]
      Tags:
        -
          Key: "Name"
          Value: "bastionhost"
      BlockDeviceMappings:
      - DeviceName: /dev/sdc
        VirtualName: ephemeral0
  
  
Outputs:
  StackName:
        Value:
            !Ref AWS::StackName
  Instance:
    Value: !Ref BastionHostEC2Instance
    Description: DNS Name of the newly created EC2 instance
    Export:
      Name:
        "Fn::Sub":
          - ${StackName}-PublicDnsNameID
          - StackName: !Ref AWS::StackName