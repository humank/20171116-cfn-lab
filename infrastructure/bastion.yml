AWSTemplateFormatVersion: '2010-09-09'

Description:
  create ec2 t2.micro instance for bastion host
Parameters:
  StackName:
        Description: An environment name that will be prefixed to resource names
        Type: String
  
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  Subnets:
    Description: WebServer EC2 instance locate in public subnet
    Type: List<AWS::EC2::Subnet::Id>

  BastionHostSecurityGroup:
    Description: WebServer EC2 assigned with VPC Security Group
    Type: List<AWS::EC2::SecurityGroup::Id>

  BastionSSHLocation:
    Description: Lockdown SSH access to the bastion host (default can be accessed from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form on-premise ip x.x.x.x/x.

  BastionInstanceType:
      Description: WebServer EC2 instance type
      Type: String
      Default: t2.micro

  BastionImageId:
    Description: Use Amazon Linux AMI 2017.09.1 HVM - ami-2803ac4e
    Type: String
    Default: ami-2803ac4e

Mappings:
  AWSInstanceType2Arch:
    t2.small:
      Arch: '64'
    t2.micro:
      Arch: '64' 
    t2.medium: 
      Arch: '64' 
    m3.medium:
      Arch: '64' 
  AWSRegionArch2AMI:
    ap-northeast-1:
      '64': ami-2803ac4e
    us-east-1:
      '64': ami-6057e21a
    us-east-1:
      '64': ami-aa1b34cf
    us-west-1:
      '64': ami-1a033c7a
    us-west-2:
      '64': ami-32d8124a
      
Resources:
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      #ImageId: !Ref BastionImageId
      ImageId:
        !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch,
          !Ref 'BastionInstanceType', Arch]]
      InstanceType: !Ref BastionInstanceType
      SecurityGroups: !Ref BastionHostSecurityGroup
      InstanceMonitoring: true
      KeyName: !Ref KeyName

  BastionASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      #TargetGroupARNs: [ !Ref ALBTargetGroup ]
      Tags:
        - Key: Name
          Value: BastionHost
          PropagateAtLaunch: true
      MaxSize: 1
      MinSize: 1
      VPCZoneIdentifier:
        - !Select [ 0, !Ref Subnets ]
        - !Select [ 1, !Ref Subnets ]
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1

  
# Outputs:
#   StackName:
#         Value:
#             !Ref AWS::StackName
#   BastionHost:
#     Value: !Ref BastionHostEC2Instance
#     Description: DNS Name of the newly created EC2 instance
#     Export:
#       Name:
#         "Fn::Sub":
#           - ${StackName}-PublicDnsNameID
#           - StackName: !Ref AWS::StackName