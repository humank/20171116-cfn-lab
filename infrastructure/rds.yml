AWSTemplateFormatVersion: '2010-09-09'

# Database stack creation prerequisite:  first create a VPC stack.
Parameters:

  StackName:
    Description: Name of an active CloudFormation stack that contains networking resources.
    Type: String

  DBSecurityGroup:
    Description: Name of a existed DBSecurityGroup to apply.
    Type: String

  PrivateSubnets:
      Description: Name of privatesubnets for rds.
      Type: String

  PrivateSubnet1:
    Description: Name of a existed PrivateSubnet1 to apply.
    Type: String

  PrivateSubnet2:
    Description: Name of a existed PrivateSubnet2 to apply.
    Type: String
  
  DatabaseUser:
    Default: dlinkdemo
    NoEcho: 'true'
    Type: String

  DatabasePassword:
    Default: dlinkdemo
    NoEcho: 'true'
    Type: String

  DatabaseName:
    Default: dlinkdemo
    Type: String
    Description: Database name
    
  DatabaseSize:
    Default: 5
    Type: String
    Description: Database storage size in gigabytes (GB)
    MinLength: 1
    AllowedPattern: "[5-9]|[1-9][0-9]+"
    ConstraintDescription: Enter a size of at least 5 GB
    
  DatabaseEngine:
    Default: mysql
    Type: String
    Description: Database engine, MySQL or PostgreSQL
    ConstraintDescription: Choose an engine from the drop down
    AllowedValues: 
      - mysql
      - postgres
    
  DatabaseInstanceClass:
    Default: db.t2.micro
    Type: String
    Description: Database instance class, e.g. db.t2.micro (free tier)
    ConstraintDescription: Choose an instance class from the drop down
    AllowedValues: 
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      
Resources:

# segment for create parameter stores resource from the user input secured info
  PSDatabaseUser:
    Type: "AWS::SSM::Parameter"
    Properties:
      #Naming convention : /environment/region/business app/component/parameter
      Name: "/Prod/US-east-1/SimpleWeb/Database/DatabaseUser"
      Type: "String"
      Value: !Ref DatabaseUser
      Description: "DatabaseUser for SimpleWeb application runs on US-east-1 production env."

  PSDatabasePassword:
      Type: "AWS::SSM::Parameter"
      Properties:
        #Naming convention : /environment/region/business app/component/parameter
        Name: "/Prod/US-east-1/SimpleWeb/Database/DatabasePassword"
        Type: "String"
        Value: !Ref DatabasePassword
        Description: "DatabasePassword for SimpleWeb application runs on US-east-1 production env."      

  PSDatabaseName:
      Type: "AWS::SSM::Parameter"
      Properties:
        #Naming convention : /environment/region/business app/component/parameter
        Name: "/Prod/US-east-1/SimpleWeb/Database/DatabaseName"
        Type: "String"
        Value: !Ref DatabaseName
        Description: "DatabaseName for SimpleWeb application runs on US-east-1 production env."      


# segment for Database

  DbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS DB subnet group
      SubnetIds:
      - !Ref PrivateSubnet1
      - !Ref PrivateSubnet2
      
      #- !ImportValue
      #    "Fn::Sub": "${StackName}-PrivateSubnet1"
      #- !ImportValue
      #    "Fn::Sub": "${StackName}-PrivateSubnet2"
          
 
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSubnetGroupName: !Ref DbSubnetGroup
      Engine: !Ref DatabaseEngine
      DBName: !Ref DatabaseName
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      DBInstanceClass: !Ref DatabaseInstanceClass
      AllocatedStorage: !Ref DatabaseSize
      StorageType: gp2
      MultiAZ: 'true'

Outputs:

  RdsDbId:
    Description: RDS Database ID
    Value: !Ref Database
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseID"

  RdsDbURL:
    Description: RDS Database URL
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseURL"

  DbUser:
    Description: RDS Database admin account user
    Value: !Ref DatabaseUser
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseUser"

  DbPassword:
    Description: RDS Database admin account password
    Value: !Ref DatabasePassword
    Export:
      Name: !Sub "${AWS::StackName}-DatabasePassword"