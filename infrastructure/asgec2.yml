AWSTemplateFormatVersion: '2010-09-09'
Description:
  create ec2 spot request to runs on.

Conditions:
  SpotOnlyCond: !Not [ !Equals [ !Ref SpotPrice, 0 ] ]
  EnableASGCond: !Equals [ !Ref AutoscalingGroupOrSpot, "AutoscalingGroup" ]
  DisableASGCond: !Equals [ !Ref AutoscalingGroupOrSpot, "spotInstance" ]

Parameters:
  StackName:
        Description: An environment name that will be prefixed to resource names
        Type: String
  
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  Subnets:
    Description: WebServer EC2 instance locate in public subnet
    Type: List<AWS::EC2::Subnet::Id>

  ALBTargetGroup:
    Description: The Application Load Balancer TargetGroup to register with
    Type: String

  # ALBLoadBalancer:
  #   Description: AutoScaling group EC2 instances behind ALB
  #   Type: String

  EC2HostSecurityGroup:
    Description: WebServer EC2 assigned with VPC Security Group
    Type: List<AWS::EC2::SecurityGroup::Id>

  SSHLocation:
    Description: Lockdown SSH access to the bastion host (default can be accessed
      from anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.

  InstanceType:
    Description: The instance which you request for spot fleet
    Default: m3.medium
    Type: String

  TargetCapacity:
    Description: The request ec2 instance spot capacity
    Type: String
    Default: 2

  ImageId:
    Type: String
    Default: ami-2803ac4e

  AutoscalingGroupOrSpot:
    Type: String
    Default: "AutoscalingGroup"
    Description: "Provision autoscaling group instance with spot or not."
    AllowedValues:
      - "AutoscalingGroup"
      - "spotInstance"

  SpotPrice:
    Type: Number
    Description: spot price for spot instances
    Default: 0.00

Resources:
  AppLaunchConfiguration:
    Condition: EnableASGCond
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SecurityGroups: !Ref EC2HostSecurityGroup
      InstanceMonitoring: true
      KeyName: !Ref KeyName
      SpotPrice: 
        !If 
          - SpotOnlyCond
          - !Ref SpotPrice
          - !Ref AWS::NoValue
      UserData: 
        "Fn::Base64": 
              !Sub |
                #!/bin/bash
                sudo su
                yum update -y
                yum install httpd php -y
                chkconfig httpd on
                service httpd start
                echo "<?php $_SERVER['SERVER_ADDR'] ?>" > /var/www/html/index.php
                #cd /var/www/html
                #wget https://s3.eu-west-2.amazonaws.com/acloudguru-example/connect.php
      #IamInstanceProfile: !Ref EC2InstanceProfile

  AppASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: 2
      LaunchConfigurationName: !Ref AppLaunchConfiguration
      #TargetGroupARNs: [!Ref ALBLoadBalancer]
      TargetGroupARNs: [ !Ref ALBTargetGroup ]
      MaxSize: 6
      MinSize: 2
      VPCZoneIdentifier:
        - !Select [ 0, !Ref Subnets ]
        - !Select [ 1, !Ref Subnets ]
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 2