Description: >
    Create all the security gorups to support well-architected environment secuirty constraint.

Parameters:
    
    StackName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    
    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to
    
    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.180.8.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.180.16.0/24
    
    BastionSSHLocation:
        Description: Lockdown SSH access to the bastion host (default can be accessed from anywhere)
        Type: String
        MinLength: '9'
        MaxLength: '18'
        Default: 0.0.0.0/0
        AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
        ConstraintDescription: must be a valid CIDR range of the form on-premise ip x.x.x.x/x.

Resources:

    # This security group defines who/where is allowed to access the EC2 hosts directly.
    # By default we're just allowing access from the load balancer.  If you want to SSH 
    # into the hosts, or expose non-load balanced services you can open their ports here.
    EC2HostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the EC2 hosts and the tasks/containers that run on them
            SecurityGroupIngress:
                - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup 
                  IpProtocol: -1 
                  Description: allow inbound access to EC2 from the ELB
                - SourceSecurityGroupId: !Ref BastionHostSecurityGroup 
                  IpProtocol: -1 
                  Description: allow inbound access to EC2 from the Bastion
            Tags: 
                - Key: Name
                  Value: !Sub ${StackName}-EC2-Hosts

    # This security group defines who/where is allowed to access the Application Load Balancer.
    # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
    # it further if you want.
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of EC2
            SecurityGroupIngress:
                # Allow access from anywhere to our EC2 services
                - CidrIp: 0.0.0.0/0
                  IpProtocol: -1
                  Description: Allow access from anywhere to send request to Loadbalancer, then forward to EC2 services
            Tags: 
                - Key: Name
                  Value: !Sub ${StackName}-LoadBalancers

    BastionHostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            VpcId: !Ref VPC
            GroupDescription: Only allow on-premise ip SSH access
            SecurityGroupIngress:
            - 
                IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: !Ref 'BastionSSHLocation'

    DbSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable access to the RDS DB, allow traffic from the PublicSubnets
            VpcId: !Ref VPC
            Description: 
            SecurityGroupIngress:
            - 
                CidrIp: !Ref PublicSubnet1CIDR
                IpProtocol: tcp
                ToPort: 3306
                FromPort: 3306
            - 
                CidrIp: !Ref PublicSubnet2CIDR
                IpProtocol: tcp
                ToPort: 3306
                FromPort: 3306
            Tags:
            - 
                Key: Name
                Value: !Sub "${AWS::StackName}-DbSecurityGroup"

Outputs:

    StackName:
        Value:
            !Ref AWS::StackName

    EC2HostSecurityGroup: 
        Description: A reference to the security group for EC2 hosts
        Value: !Ref EC2HostSecurityGroup
        Export:
            Name: 
                "Fn::Sub": 
                    - ${StackName}-EC2HostSecurityGroupID
                    - StackName: !Ref AWS::StackName

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for load balancers
        Value: !Ref LoadBalancerSecurityGroup
        Export:
            Name: 
                "Fn::Sub": 
                    - ${StackName}-ELBSecurityGroupID
                    - StackName: !Ref AWS::StackName

    BastionHostSecurityGroup:
        Description: A reference to the security group for Bastion hosts
        Value: !Ref BastionHostSecurityGroup
        Export:
            Name: 
                "Fn::Sub": 
                    - ${StackName}-BastionHostSecurityGroupID
                    - StackName: !Ref AWS::StackName

    DbSecurityGroup:
        Description: Security group ID for RDS database
        Value: !GetAtt DbSecurityGroup.GroupId
        Export:
            Name: 
                "Fn::Sub": 
                    - ${StackName}-DbSecurityGroupID
                    - StackName: !Ref AWS::StackName